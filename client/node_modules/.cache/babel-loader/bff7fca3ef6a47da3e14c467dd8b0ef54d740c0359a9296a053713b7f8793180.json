{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{QRCodeCanvas}from'qrcode.react';import'./Ticketsystem.css';// Import the CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TicketSystem=()=>{const[ticketCount,setTicketCount]=useState(0);const[uniqueLink,setUniqueLink]=useState('');const handleTicketCountChange=event=>{setTicketCount(event.target.value);};const generateLink=()=>{if(ticketCount<=0){alert('Please enter a valid ticket count.');return;}// Generate unique session link with ticketCount as a query parameter\nconst uniqueId=Date.now();// Example unique identifier\nconst url=`http://localhost:3000/tickets?sessionId=${uniqueId}&ticketCount=${ticketCount}`;// Set the URL to state or redirect to the new page\nsetUniqueLink(url);// For QR code\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"ticket-system-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"header\",children:\"Ticket Reservation System\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"ticketCount\",className:\"label\",children:\"Number of Tickets:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"ticketCount\",value:ticketCount,onChange:handleTicketCountChange,className:\"input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:generateLink,className:\"generate-button\",children:\"Generate Session Link\"})]}),uniqueLink&&/*#__PURE__*/_jsxs(\"div\",{className:\"qr-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"qr-text\",children:\"Here is your unique session QR Code:\"}),/*#__PURE__*/_jsx(QRCodeCanvas,{value:uniqueLink,size:256,level:\"H\",className:\"qr-code\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"link\",children:uniqueLink})]})]});};export default TicketSystem;","map":{"version":3,"names":["React","useState","axios","QRCodeCanvas","jsx","_jsx","jsxs","_jsxs","TicketSystem","ticketCount","setTicketCount","uniqueLink","setUniqueLink","handleTicketCountChange","event","target","value","generateLink","alert","uniqueId","Date","now","url","className","children","htmlFor","type","id","onChange","onClick","size","level"],"sources":["/home/slow/ticket-sys/client/src/components/ticket-system.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport './Ticketsystem.css'; // Import the CSS file\n\nconst TicketSystem = () => {\n  const [ticketCount, setTicketCount] = useState(0);\n  const [uniqueLink, setUniqueLink] = useState('');\n\n  const handleTicketCountChange = (event) => {\n    setTicketCount(event.target.value);\n  };\n\n  const generateLink = () => {\n    if (ticketCount <= 0) {\n      alert('Please enter a valid ticket count.');\n      return;\n    }\n\n    // Generate unique session link with ticketCount as a query parameter\n    const uniqueId = Date.now(); // Example unique identifier\n    const url = `http://localhost:3000/tickets?sessionId=${uniqueId}&ticketCount=${ticketCount}`;\n\n    // Set the URL to state or redirect to the new page\n    setUniqueLink(url); // For QR code\n  };\n\n  return (\n    <div className=\"ticket-system-container\">\n      <h1 className=\"header\">Ticket Reservation System</h1>\n      <div className=\"form-container\">\n        <label htmlFor=\"ticketCount\" className=\"label\">\n          Number of Tickets:\n        </label>\n        <input\n          type=\"number\"\n          id=\"ticketCount\"\n          value={ticketCount}\n          onChange={handleTicketCountChange}\n          className=\"input\"\n        />\n        <button onClick={generateLink} className=\"generate-button\">\n          Generate Session Link\n        </button>\n      </div>\n      {uniqueLink && (\n        <div className=\"qr-container\">\n          <p className=\"qr-text\">Here is your unique session QR Code:</p>\n          <QRCodeCanvas value={uniqueLink} size={256} level=\"H\" className=\"qr-code\" />\n          <h2 className=\"link\">{uniqueLink}</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TicketSystem;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,YAAY,KAAQ,cAAc,CAC3C,MAAO,oBAAoB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7B,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACU,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEhD,KAAM,CAAAY,uBAAuB,CAAIC,KAAK,EAAK,CACzCJ,cAAc,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACpC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAIR,WAAW,EAAI,CAAC,CAAE,CACpBS,KAAK,CAAC,oCAAoC,CAAC,CAC3C,OACF,CAEA;AACA,KAAM,CAAAC,QAAQ,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE;AAC7B,KAAM,CAAAC,GAAG,CAAG,2CAA2CH,QAAQ,gBAAgBV,WAAW,EAAE,CAE5F;AACAG,aAAa,CAACU,GAAG,CAAC,CAAE;AACtB,CAAC,CAED,mBACEf,KAAA,QAAKgB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtCnB,IAAA,OAAIkB,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAAC,2BAAyB,CAAI,CAAC,cACrDjB,KAAA,QAAKgB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BnB,IAAA,UAAOoB,OAAO,CAAC,aAAa,CAACF,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,oBAE/C,CAAO,CAAC,cACRnB,IAAA,UACEqB,IAAI,CAAC,QAAQ,CACbC,EAAE,CAAC,aAAa,CAChBX,KAAK,CAAEP,WAAY,CACnBmB,QAAQ,CAAEf,uBAAwB,CAClCU,SAAS,CAAC,OAAO,CAClB,CAAC,cACFlB,IAAA,WAAQwB,OAAO,CAAEZ,YAAa,CAACM,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,uBAE3D,CAAQ,CAAC,EACN,CAAC,CACLb,UAAU,eACTJ,KAAA,QAAKgB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BnB,IAAA,MAAGkB,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,sCAAoC,CAAG,CAAC,cAC/DnB,IAAA,CAACF,YAAY,EAACa,KAAK,CAAEL,UAAW,CAACmB,IAAI,CAAE,GAAI,CAACC,KAAK,CAAC,GAAG,CAACR,SAAS,CAAC,SAAS,CAAE,CAAC,cAC5ElB,IAAA,OAAIkB,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAEb,UAAU,CAAK,CAAC,EACnC,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}