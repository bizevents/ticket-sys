{"ast":null,"code":"var _jsxFileName = \"/home/slow/ticket-sys/client/src/pages/ticketpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ticketgrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicketGrid = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [selectedTickets, setSelectedTickets] = useState([]);\n  const [ticketCount, setTicketCount] = useState(0);\n  useEffect(() => {\n    // Fetch available tickets from the API\n    const queryParams = new URLSearchParams(window.location.search);\n    const count = parseInt(queryParams.get('ticketCount'), 10) || 0;\n    setTicketCount(count);\n    axios.get('http://localhost:5000/api/tickets').then(response => {\n      setTickets(response.data);\n    }).catch(error => {\n      console.error('Error fetching tickets:', error);\n    });\n  }, []);\n  const handleSelectTicket = ticketId => {\n    if (selectedTickets.length >= ticketCount) {\n      alert(`You can only select up to ${ticketCount} tickets.`);\n      return;\n    }\n    if (selectedTickets.includes(ticketId)) {\n      setSelectedTickets(selectedTickets.filter(id => id !== ticketId));\n    } else {\n      setSelectedTickets([...selectedTickets, ticketId]);\n    }\n  };\n  const handleReserveTickets = () => {\n    if (selectedTickets.length === 0) {\n      alert('Please select at least one ticket to reserve.');\n      return;\n    }\n    axios.post('http://localhost:5000/api/tickets/reserve', {\n      ticketIds: selectedTickets,\n      name: 'User Name',\n      // Replace with real user input\n      phoneNumber: '1234567890',\n      email: 'user@example.com'\n    }).then(() => {\n      alert('Tickets reserved successfully!');\n      setSelectedTickets([]);\n    }).catch(error => {\n      console.error('Error reserving tickets:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ticket-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tickets\",\n      children: tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `ticket ${selectedTickets.includes(ticket.ticketId) ? 'selected' : ''}`,\n        onClick: () => handleSelectTicket(ticket.ticketId),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ticket #\", ticket.ticketNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ticket.available ? 'Available' : 'Reserved'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, ticket.ticketId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Tickets: \", selectedTickets.length, \"/\", ticketCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReserveTickets,\n        disabled: selectedTickets.length === 0,\n        children: \"Reserve Tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(TicketGrid, \"6kcOgXPldKw/SsUEV7okxMjDOv8=\");\n_c = TicketGrid;\nexport default TicketGrid;\nvar _c;\n$RefreshReg$(_c, \"TicketGrid\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TicketGrid","_s","tickets","setTickets","selectedTickets","setSelectedTickets","ticketCount","setTicketCount","queryParams","URLSearchParams","window","location","search","count","parseInt","get","then","response","data","catch","error","console","handleSelectTicket","ticketId","length","alert","includes","filter","id","handleReserveTickets","post","ticketIds","name","phoneNumber","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ticket","onClick","ticketNumber","available","disabled","_c","$RefreshReg$"],"sources":["/home/slow/ticket-sys/client/src/pages/ticketpage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ticketgrid.css';\n\nconst TicketGrid = () => {\n  const [tickets, setTickets] = useState([]);\n  const [selectedTickets, setSelectedTickets] = useState([]);\n  const [ticketCount, setTicketCount] = useState(0);\n\n  useEffect(() => {\n    // Fetch available tickets from the API\n    const queryParams = new URLSearchParams(window.location.search);\n    const count = parseInt(queryParams.get('ticketCount'), 10) || 0;\n\n    setTicketCount(count);\n\n    axios\n      .get('http://localhost:5000/api/tickets')\n      .then((response) => {\n        setTickets(response.data);\n      })\n      .catch((error) => {\n        console.error('Error fetching tickets:', error);\n      });\n  }, []);\n\n  const handleSelectTicket = (ticketId) => {\n    if (selectedTickets.length >= ticketCount) {\n      alert(`You can only select up to ${ticketCount} tickets.`);\n      return;\n    }\n\n    if (selectedTickets.includes(ticketId)) {\n      setSelectedTickets(selectedTickets.filter((id) => id !== ticketId));\n    } else {\n      setSelectedTickets([...selectedTickets, ticketId]);\n    }\n  };\n\n  const handleReserveTickets = () => {\n    if (selectedTickets.length === 0) {\n      alert('Please select at least one ticket to reserve.');\n      return;\n    }\n\n    axios\n      .post('http://localhost:5000/api/tickets/reserve', {\n        ticketIds: selectedTickets,\n        name: 'User Name', // Replace with real user input\n        phoneNumber: '1234567890',\n        email: 'user@example.com',\n      })\n      .then(() => {\n        alert('Tickets reserved successfully!');\n        setSelectedTickets([]);\n      })\n      .catch((error) => {\n        console.error('Error reserving tickets:', error);\n      });\n  };\n\n  return (\n    <div className=\"ticket-grid\">\n      <h1>Available Tickets</h1>\n      <div className=\"tickets\">\n        {tickets.map((ticket) => (\n          <div\n            key={ticket.ticketId}\n            className={`ticket ${selectedTickets.includes(ticket.ticketId) ? 'selected' : ''}`}\n            onClick={() => handleSelectTicket(ticket.ticketId)}\n          >\n            <p>Ticket #{ticket.ticketNumber}</p>\n            <p>{ticket.available ? 'Available' : 'Reserved'}</p>\n          </div>\n        ))}\n      </div>\n      <div className=\"actions\">\n        <p>\n          Selected Tickets: {selectedTickets.length}/{ticketCount}\n        </p>\n        <button onClick={handleReserveTickets} disabled={selectedTickets.length === 0}>\n          Reserve Tickets\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TicketGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}