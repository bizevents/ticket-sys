{"ast":null,"code":"var _jsxFileName = \"/home/slow/ticket-sys/src/pages/ticketpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicketGrid = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  useEffect(() => {\n    // Fetch available tickets from the backend\n    const fetchTickets = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/tickets/available\");\n        setTickets(response.data);\n      } catch (error) {\n        console.error(\"Error fetching tickets:\", error);\n      }\n    };\n    fetchTickets();\n  }, []);\n  const handleSelectTicket = async ticketId => {\n    // Here you would prompt the user to input their details and then reserve the ticket\n    const userDetails = {\n      firstName: \"John\",\n      lastName: \"Doe\",\n      email: \"john.doe@example.com\",\n      phoneNumber: \"1234567890\"\n    };\n    try {\n      const response = await axios.post(\"http://localhost:5000/reserve-ticket\", {\n        ticketId,\n        ...userDetails\n      });\n      alert(response.data.message);\n    } catch (error) {\n      alert(\"Error reserving ticket\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Available Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticket-grid\",\n      children: tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-item\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSelectTicket(ticket.ticketId),\n          children: ticket.ticketId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, ticket.ticketId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TicketGrid, \"54iZ51D3gm8y2vmomMR+587W7ik=\");\n_c = TicketGrid;\nexport default TicketGrid;\nvar _c;\n$RefreshReg$(_c, \"TicketGrid\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TicketGrid","_s","tickets","setTickets","fetchTickets","response","get","data","error","console","handleSelectTicket","ticketId","userDetails","firstName","lastName","email","phoneNumber","post","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","ticket","onClick","_c","$RefreshReg$"],"sources":["/home/slow/ticket-sys/src/pages/ticketpage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst TicketGrid = () => {\n  const [tickets, setTickets] = useState([]);\n\n  useEffect(() => {\n    // Fetch available tickets from the backend\n    const fetchTickets = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/tickets/available\");\n        setTickets(response.data);\n      } catch (error) {\n        console.error(\"Error fetching tickets:\", error);\n      }\n    };\n\n    fetchTickets();\n  }, []);\n\n  const handleSelectTicket = async (ticketId) => {\n    // Here you would prompt the user to input their details and then reserve the ticket\n    const userDetails = { firstName: \"John\", lastName: \"Doe\", email: \"john.doe@example.com\", phoneNumber: \"1234567890\" };\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/reserve-ticket\", {\n        ticketId,\n        ...userDetails,\n      });\n\n      alert(response.data.message);\n    } catch (error) {\n      alert(\"Error reserving ticket\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Available Tickets</h1>\n      <div className=\"ticket-grid\">\n        {tickets.map((ticket) => (\n          <div key={ticket.ticketId} className=\"ticket-item\">\n            <button onClick={() => handleSelectTicket(ticket.ticketId)}>\n              {ticket.ticketId}\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TicketGrid;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,yCAAyC,CAAC;QAC3EH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;IAC7C;IACA,MAAMC,WAAW,GAAG;MAAEC,SAAS,EAAE,MAAM;MAAEC,QAAQ,EAAE,KAAK;MAAEC,KAAK,EAAE,sBAAsB;MAAEC,WAAW,EAAE;IAAa,CAAC;IAEpH,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMR,KAAK,CAACoB,IAAI,CAAC,sCAAsC,EAAE;QACxEN,QAAQ;QACR,GAAGC;MACL,CAAC,CAAC;MAEFM,KAAK,CAACb,QAAQ,CAACE,IAAI,CAACY,OAAO,CAAC;IAC9B,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdU,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BzB,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAAAL,QAAA,EACzBlB,OAAO,CAACwB,GAAG,CAAEC,MAAM,iBAClB5B,OAAA;QAA2B0B,SAAS,EAAC,aAAa;QAAAL,QAAA,eAChDrB,OAAA;UAAQ6B,OAAO,EAAEA,CAAA,KAAMlB,kBAAkB,CAACiB,MAAM,CAAChB,QAAQ,CAAE;UAAAS,QAAA,EACxDO,MAAM,CAAChB;QAAQ;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAHDG,MAAM,CAAChB,QAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIpB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CA/CID,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAiDhB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}