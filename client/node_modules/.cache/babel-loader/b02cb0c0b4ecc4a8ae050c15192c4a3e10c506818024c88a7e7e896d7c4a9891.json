{"ast":null,"code":"// Assuming you are using MySQL or any database to fetch available tickets\napp.get('/api/tickets', async (req, res) => {\n  try {\n    // Fetch only tickets where 'available' is TRUE\n    const [rows] = await db.query('SELECT * FROM tickets WHERE available = TRUE');\n    if (rows.length === 0) {\n      return res.status(404).json({\n        message: 'No available tickets found'\n      });\n    }\n\n    // Send available tickets as response\n    res.json(rows);\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({\n      message: 'Server error'\n    });\n  }\n});","map":{"version":3,"names":["app","get","req","res","rows","db","query","length","status","json","message","err","console","error"],"sources":["/home/slow/ticket-sys/client/src/pages/ticketpage.jsx"],"sourcesContent":["// Assuming you are using MySQL or any database to fetch available tickets\napp.get('/api/tickets', async (req, res) => {\n  try {\n    // Fetch only tickets where 'available' is TRUE\n    const [rows] = await db.query('SELECT * FROM tickets WHERE available = TRUE');\n    \n    if (rows.length === 0) {\n      return res.status(404).json({ message: 'No available tickets found' });\n    }\n\n    // Send available tickets as response\n    res.json(rows);\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({ message: 'Server error' });\n  }\n});\n"],"mappings":"AAAA;AACAA,GAAG,CAACC,GAAG,CAAC,cAAc,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC1C,IAAI;IACF;IACA,MAAM,CAACC,IAAI,CAAC,GAAG,MAAMC,EAAE,CAACC,KAAK,CAAC,8CAA8C,CAAC;IAE7E,IAAIF,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;MACrB,OAAOJ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAA6B,CAAC,CAAC;IACxE;;IAEA;IACAP,GAAG,CAACM,IAAI,CAACL,IAAI,CAAC;EAChB,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAe,CAAC,CAAC;EACnD;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}